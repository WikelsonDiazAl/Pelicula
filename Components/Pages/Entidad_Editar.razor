@page "/entidad/{tipo}/editar"
@page "/entidad/{tipo}/editar/{Id:int}"
@inject NavigationManager NavMan
@inject IJSRuntime JSx
@inject SerieContext Sc
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore;

<h3 class="text-center mb-3">Editanto @Tipo</h3>


<EditForm Model="instancia" OnValidSubmit="GuardarDatos">
    <DataAnnotationsValidator />
    <ValidationSummary />
<div class="container">
<div class="form-group mb-3">
    <label for="Nombre">Nombre:</label>
    <InputText id="Nombre" class="form-control" @bind-Value="instancia.Nombre" />
</div>

<div class="form-group mb-3">
    <label for="Pais">Pa√≠s:</label>
    <InputText id="Pais" class="form-control" @bind-Value="instancia.Pais" />
</div>

<div class="form-group mb-3">
    <label for="Idioma">Idioma:</label>
    <InputText id="Idioma" class="form-control" @bind-Value="instancia.Idioma" />
</div>

<div class="form-group mb-3">
    <label for="Foto">Foto:</label>
    <input type="url" id="Foto" class="form-control" @bind="instancia.Foto" />
</div>

<div class="form-group mb-3">
    <label for="Resumen">Resumen:</label>
    <InputTextArea id="Resumen" class="form-control" @bind-Value="instancia.Resumen" />
</div>
</div>


<h4 class="text-center" >Personajes</h4>

<table class= "table">
    <thead>
        <tr>
            <th></th>
            <th>Nombre</th>
            <th>Apodo</th>
            <th>Raza</th>
            <th>Foto</th>
            <th>Edad</th>
            <th>Poder Caracteristico</th>
            <td>
                <button type="button" class="btn btn-primary" @onclick="Agregar_Personaje">Agregar personaje</button>
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in instancia.Personajes){
            <tr>
                <td><img style="height: 70px" src="@item.Foto" alt="@item.Foto" /></td>
                <td><InputText @bind-Value="item.Nombre" class="form-control" /></td>
                <td><InputText @bind-Value="item.Apodo" class="form-control" /></td>
                <td><InputText @bind-Value="item.Raza" class="form-control" /></td>
                <td><InputText @bind-Value="item.Foto" class="form-control" /></td>
                <td><InputNumber @bind-Value="item.Edad" class="form-control" /></td>
                <td><InputText @bind-Value="item.Poder_caracteristico" class="form-control" /></td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center mb-3">
    <button type="Submit" class="btn btn-primary">Guardar</button>
</div>

</EditForm>


@code{
    [Parameter]

    public string Tipo {get; set;} = "";

    [Parameter]
    public int Id {get; set;} = 0;

    private void Agregar_Personaje(){
        instancia.Personajes.Add(new Personaje());
        StateHasChanged();

    }

    protected override void OnParametersSet(){
        switch(Tipo){
            case "libros":
            Entidad_Tipo = Tipo_Entidad.Libro;
            break;
            case "peliculas":
            Entidad_Tipo = Tipo_Entidad.Pelicula;
            break;
            case "series":
            Entidad_Tipo = Tipo_Entidad.Serie;
            break;
            default:
            NavMan.NavigateTo("/");
            break;
        }
    }

    Serie_Libro_Pelicula instancia = new Serie_Libro_Pelicula();

    Tipo_Entidad Entidad_Tipo;


    async Task GuardarDatos(){

        instancia.Tipo = Entidad_Tipo;

        Console.WriteLine("Se guardo");
        if(instancia.Id > 0){
            Sc.Serie_Libro_Pelicula.Update(instancia);
        }
        else{
            Sc.Serie_Libro_Pelicula.Add(instancia);
        }
        await Sc.SaveChangesAsync();
        await JSx.InvokeVoidAsync("alert", "Se guardo correctamente");
        NavMan.NavigateTo($"/entidad/{Tipo}");
        

    }

    protected override async Task OnAfterRenderAsync(bool firstRender){

        if(firstRender){

            if(Id > 0){

                instancia = await Sc.Serie_Libro_Pelicula.FirstOrDefaultAsync(x => x.Id == Id)?? new Serie_Libro_Pelicula();
                StateHasChanged();

            }
            
        }

    }


}